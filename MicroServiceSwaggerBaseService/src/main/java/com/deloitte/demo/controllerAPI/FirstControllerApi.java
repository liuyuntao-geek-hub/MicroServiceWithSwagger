/**
 * NOTE: This class is auto generated by the swagger code generator program (2.2.3).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package com.deloitte.demo.controllerAPI;


import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;

@javax.annotation.Generated(value = "io.swagger.codegen.languages.SpringCodegen", date = "2017-12-21T05:48:01.403Z")

@Api(value = "FirstController", description = "the FirstController API")
public interface FirstControllerApi {

    @ApiOperation(value = "root", notes = "", response = String.class, tags={ "first-controller", })
    @ApiResponses(value = {
            @ApiResponse(code = 200, message = "OK", response = String.class),
            @ApiResponse(code = 204, message = "No Content", response = Void.class),
            @ApiResponse(code = 401, message = "Unauthorized", response = Void.class),
            @ApiResponse(code = 403, message = "Forbidden", response = Void.class) })

    @RequestMapping(value = "/FirstController/",
            produces = { "*/*" },
          //  consumes = { "application/json" },
            method = RequestMethod.OPTIONS)
    ResponseEntity<String> rootUsingOPTIONS();

    @ApiOperation(value = "root", notes = "", response = String.class, tags={ "first-controller", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK", response = String.class),
        @ApiResponse(code = 401, message = "Unauthorized", response = Void.class),
        @ApiResponse(code = 403, message = "Forbidden", response = Void.class),
        @ApiResponse(code = 404, message = "Not Found", response = Void.class) })

    @RequestMapping(value = "/FirstController/",
        //produces = { "application/json" },
         //   produces = { "text/plain" },
            produces = { "*/*" },
            //  consumes = { "application/json" },
        method = RequestMethod.GET)
    ResponseEntity<String> rootUsingGET();

    @ApiOperation(value = "sayHello", notes = "", response = String.class, tags={ "first-controller", })
    @ApiResponses(value = {
            @ApiResponse(code = 200, message = "OK", response = String.class),
            @ApiResponse(code = 401, message = "Unauthorized", response = Void.class),
            @ApiResponse(code = 403, message = "Forbidden", response = Void.class),
            @ApiResponse(code = 404, message = "Not Found", response = Void.class) })

    @RequestMapping(value = "/FirstController/sayHello",
            produces = { "*/*" },
         //   consumes = { "application/json" },
            method = RequestMethod.GET)
    ResponseEntity<String> sayHelloUsingGET();


    @ApiOperation(value = "sayGoodBy", notes = "", response = String.class, tags={ "first-controller", })
    @ApiResponses(value = {
            @ApiResponse(code = 200, message = "OK", response = String.class),
            @ApiResponse(code = 401, message = "Unauthorized", response = Void.class),
            @ApiResponse(code = 403, message = "Forbidden", response = Void.class),
            @ApiResponse(code = 404, message = "Not Found", response = Void.class) })

    @RequestMapping(value = "/FirstController/sayGoodBy",
            produces = { "*/*" },
       //     consumes = { "application/json" },
            method = RequestMethod.GET)
    ResponseEntity<String> sayGoodByUsingGET();


/*

    @ApiOperation(value = "root", notes = "", response = String.class, tags={ "first-controller", })
    @ApiResponses(value = {
        @ApiResponse(code = 200, message = "OK", response = String.class),
        @ApiResponse(code = 204, message = "No Content", response = Void.class),
        @ApiResponse(code = 401, message = "Unauthorized", response = Void.class),
        @ApiResponse(code = 403, message = "Forbidden", response = Void.class) })

    @RequestMapping(value = "/FirstController/",
       produces = { "" },
        consumes = { "application/json" },
        method = RequestMethod.DELETE)
    ResponseEntity<String> rootUsingDELETE();

*/
/*

    @ApiOperation(value = "root", notes = "", response = String.class, tags={ "first-controller", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK", response = String.class),
        @ApiResponse(code = 204, message = "No Content", response = Void.class),
        @ApiResponse(code = 401, message = "Unauthorized", response = Void.class),
        @ApiResponse(code = 403, message = "Forbidden", response = Void.class) })
    
    @RequestMapping(value = "/FirstController/",
        produces = { "" },
        consumes = { "application/json" },
        method = RequestMethod.HEAD)
    ResponseEntity<String> rootUsingHEAD();
*/

/*


*/

/*

    @ApiOperation(value = "root", notes = "", response = String.class, tags={ "first-controller", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK", response = String.class),
        @ApiResponse(code = 204, message = "No Content", response = Void.class),
        @ApiResponse(code = 401, message = "Unauthorized", response = Void.class),
        @ApiResponse(code = 403, message = "Forbidden", response = Void.class) })
    
    @RequestMapping(value = "/FirstController/",
        produces = { "**" },
        consumes = { "application/json" },
        method = RequestMethod.PATCH)
    ResponseEntity<String> rootUsingPATCH();
*/


/*
    @ApiOperation(value = "root", notes = "", response = String.class, tags={ "first-controller", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK", response = String.class),
        @ApiResponse(code = 201, message = "Created", response = Void.class),
        @ApiResponse(code = 401, message = "Unauthorized", response = Void.class),
        @ApiResponse(code = 403, message = "Forbidden", response = Void.class),
        @ApiResponse(code = 404, message = "Not Found", response = Void.class) })
    
    @RequestMapping(value = "/FirstController/",
        produces = { "**" },
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<String> rootUsingPOST();
*/


/*
    @ApiOperation(value = "root", notes = "", response = String.class, tags={ "first-controller", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK", response = String.class),
        @ApiResponse(code = 201, message = "Created", response = Void.class),
        @ApiResponse(code = 401, message = "Unauthorized", response = Void.class),
        @ApiResponse(code = 403, message = "Forbidden", response = Void.class),
        @ApiResponse(code = 404, message = "Not Found", response = Void.class) })
    
    @RequestMapping(value = "/FirstController/",
        produces = { "**" },
        consumes = { "application/json" },
        method = RequestMethod.PUT)
    ResponseEntity<String> rootUsingPUT();
*/


/*
    @ApiOperation(value = "sayGoodBy", notes = "", response = String.class, tags={ "first-controller", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK", response = String.class),
        @ApiResponse(code = 204, message = "No Content", response = Void.class),
        @ApiResponse(code = 401, message = "Unauthorized", response = Void.class),
        @ApiResponse(code = 403, message = "Forbidden", response = Void.class) })
    
    @RequestMapping(value = "/FirstController/sayGoodBy",
        produces = { "**" },
        consumes = { "application/json" },
        method = RequestMethod.DELETE)
    ResponseEntity<String> sayGoodByUsingDELETE();
*/


/*

    @ApiOperation(value = "sayGoodBy", notes = "", response = String.class, tags={ "first-controller", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK", response = String.class),
        @ApiResponse(code = 204, message = "No Content", response = Void.class),
        @ApiResponse(code = 401, message = "Unauthorized", response = Void.class),
        @ApiResponse(code = 403, message = "Forbidden", response = Void.class) })
    
    @RequestMapping(value = "/FirstController/sayGoodBy",
        produces = { "**" },
        consumes = { "application/json" },
        method = RequestMethod.HEAD)
    ResponseEntity<String> sayGoodByUsingHEAD();
*/

/*

    @ApiOperation(value = "sayGoodBy", notes = "", response = String.class, tags={ "first-controller", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK", response = String.class),
        @ApiResponse(code = 204, message = "No Content", response = Void.class),
        @ApiResponse(code = 401, message = "Unauthorized", response = Void.class),
        @ApiResponse(code = 403, message = "Forbidden", response = Void.class) })
    
    @RequestMapping(value = "/FirstController/sayGoodBy",
        produces = { "**" },
        consumes = { "application/json" },
        method = RequestMethod.OPTIONS)
    ResponseEntity<String> sayGoodByUsingOPTIONS();
*/

/*

    @ApiOperation(value = "sayGoodBy", notes = "", response = String.class, tags={ "first-controller", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK", response = String.class),
        @ApiResponse(code = 204, message = "No Content", response = Void.class),
        @ApiResponse(code = 401, message = "Unauthorized", response = Void.class),
        @ApiResponse(code = 403, message = "Forbidden", response = Void.class) })
    
    @RequestMapping(value = "/FirstController/sayGoodBy",
        produces = { "**" },
        consumes = { "application/json" },
        method = RequestMethod.PATCH)
    ResponseEntity<String> sayGoodByUsingPATCH();
*/

/*

    @ApiOperation(value = "sayGoodBy", notes = "", response = String.class, tags={ "first-controller", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK", response = String.class),
        @ApiResponse(code = 201, message = "Created", response = Void.class),
        @ApiResponse(code = 401, message = "Unauthorized", response = Void.class),
        @ApiResponse(code = 403, message = "Forbidden", response = Void.class),
        @ApiResponse(code = 404, message = "Not Found", response = Void.class) })
    
    @RequestMapping(value = "/FirstController/sayGoodBy",
        produces = { "**" },
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<String> sayGoodByUsingPOST();
*/

/*

    @ApiOperation(value = "sayGoodBy", notes = "", response = String.class, tags={ "first-controller", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK", response = String.class),
        @ApiResponse(code = 201, message = "Created", response = Void.class),
        @ApiResponse(code = 401, message = "Unauthorized", response = Void.class),
        @ApiResponse(code = 403, message = "Forbidden", response = Void.class),
        @ApiResponse(code = 404, message = "Not Found", response = Void.class) })
    
    @RequestMapping(value = "/FirstController/sayGoodBy",
        produces = { "**" },
        consumes = { "application/json" },
        method = RequestMethod.PUT)
    ResponseEntity<String> sayGoodByUsingPUT();
*/

/*

    @ApiOperation(value = "sayHello", notes = "", response = String.class, tags={ "first-controller", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK", response = String.class),
        @ApiResponse(code = 204, message = "No Content", response = Void.class),
        @ApiResponse(code = 401, message = "Unauthorized", response = Void.class),
        @ApiResponse(code = 403, message = "Forbidden", response = Void.class) })
    
    @RequestMapping(value = "/FirstController/sayHello",
        produces = { "**" },
        consumes = { "application/json" },
        method = RequestMethod.DELETE)
    ResponseEntity<String> sayHelloUsingDELETE();
*/





/*
    @ApiOperation(value = "sayHello", notes = "", response = String.class, tags={ "first-controller", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK", response = String.class),
        @ApiResponse(code = 204, message = "No Content", response = Void.class),
        @ApiResponse(code = 401, message = "Unauthorized", response = Void.class),
        @ApiResponse(code = 403, message = "Forbidden", response = Void.class) })
    
    @RequestMapping(value = "/FirstController/sayHello",
        produces = { "**" },
        consumes = { "application/json" },
        method = RequestMethod.HEAD)
    ResponseEntity<String> sayHelloUsingHEAD();
*/


/*
    @ApiOperation(value = "sayHello", notes = "", response = String.class, tags={ "first-controller", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK", response = String.class),
        @ApiResponse(code = 204, message = "No Content", response = Void.class),
        @ApiResponse(code = 401, message = "Unauthorized", response = Void.class),
        @ApiResponse(code = 403, message = "Forbidden", response = Void.class) })
    
    @RequestMapping(value = "/FirstController/sayHello",
        produces = { "**" },
        consumes = { "application/json" },
        method = RequestMethod.OPTIONS)
    ResponseEntity<String> sayHelloUsingOPTIONS();
*/


/*
    @ApiOperation(value = "sayHello", notes = "", response = String.class, tags={ "first-controller", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK", response = String.class),
        @ApiResponse(code = 204, message = "No Content", response = Void.class),
        @ApiResponse(code = 401, message = "Unauthorized", response = Void.class),
        @ApiResponse(code = 403, message = "Forbidden", response = Void.class) })
    
    @RequestMapping(value = "/FirstController/sayHello",
        produces = { "**" },
        consumes = { "application/json" },
        method = RequestMethod.PATCH)
    ResponseEntity<String> sayHelloUsingPATCH();
*/


/*
    @ApiOperation(value = "sayHello", notes = "", response = String.class, tags={ "first-controller", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK", response = String.class),
        @ApiResponse(code = 201, message = "Created", response = Void.class),
        @ApiResponse(code = 401, message = "Unauthorized", response = Void.class),
        @ApiResponse(code = 403, message = "Forbidden", response = Void.class),
        @ApiResponse(code = 404, message = "Not Found", response = Void.class) })
    
    @RequestMapping(value = "/FirstController/sayHello",
        produces = { "**" },
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<String> sayHelloUsingPOST();

*/

/*    @ApiOperation(value = "sayHello", notes = "", response = String.class, tags={ "first-controller", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK", response = String.class),
        @ApiResponse(code = 201, message = "Created", response = Void.class),
        @ApiResponse(code = 401, message = "Unauthorized", response = Void.class),
        @ApiResponse(code = 403, message = "Forbidden", response = Void.class),
        @ApiResponse(code = 404, message = "Not Found", response = Void.class) })
    
    @RequestMapping(value = "/FirstController/sayHello",
        produces = { "**" },
        consumes = { "application/json" },
        method = RequestMethod.PUT)
    ResponseEntity<String> sayHelloUsingPUT();*/

}
